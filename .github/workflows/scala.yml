name: Scala CI

on:
  push:
    branches: [ latest ]
  pull_request:
    branches: [ latest ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
    - uses: dorny/paths-filter@v2.2.1
      id: filter
      with:
        filters: |
          noMessaging:
            - 'ecosim/**'
          compiler:
            - 'core/**'
          library:
            - 'library/**'
          example:
            - 'example/**'
          generatedExample:
            - 'generated/**'

  noMessagingTest:
    needs:setup
    if: ${{ needs.setup.steps.filter.outputs.noMessaging == 'true' }}
    run: sbt "project noMessaging; test"
  
  compilerTest:
    needs:setup
    if: ${{ needs.setup.steps.filter.outputs.compiler == 'true' }}
    run: sbt "project core; test"
  
  libraryTest:
    needs:[setup, compilerTest]
    if: ${{ needs.setup.steps.filter.outputs.library == 'true' }}
    run: sbt "project library; test"
    
  examplesCompile:
    needs:[setup, compilerTest, libraryTest]
    if: ${{ needs.setup.steps.filter.outputs.example == 'true' || needs.setup.steps.filter.outputs.library == 'true' || needs.setup.steps.filter.outputs.compiler == 'true'}}
    run: sbt "project example; runAll"

  compiledExamplesRun:
    needs:[setup, compilerTest, libraryTest, examplesCompile]
    if: ${{ needs.setup.steps.filter.outputs.generatedExample == 'true' || needs.setup.steps.filter.outputs.example == 'true' || needs.setup.steps.filter.outputs.library == 'true' || needs.setup.steps.filter.outputs.compiler == 'true'}}
    run: sbt "project genExample; testOnly generated.example.test.generatedExamples"
